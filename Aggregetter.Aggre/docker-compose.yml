version: '3.4'

services:

  elasticlog:
    container_name: elasticlog
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    ports:
      - 9200:9200
    volumes:
      - elasticlog-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.1
    ports:
      - 5601:5601
    depends_on:
      - elasticlog
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticlog:9200

  aggregetter.aggre.api:
    image: ${DOCKER_REGISTRY-}aggregetteraggreapi
    build:
      context: .
      dockerfile: Aggregetter.Aggre.API/Dockerfile
    environment:
        - "ConnectionStrings__AggreConnectionString=Server=aggregetter.db;Database=Aggregetter.Data;Uid=root;Pwd=example;"
        - "ConnectionStrings__AggreIdentityConnectionString=Server=aggregetter.db;Database=Aggregetter.Identity;Uid=root;Pwd=example;"
        - "ConnectionStrings__RedisConnectionString=cache"
        - "ConnectionStrings__RabbitMQConnectionString=rabbitmq"
        - "ConnectionStrings__ElasticLogConnectionString=http://elasticlog:9200"

    depends_on: 
        - aggregetter.db
        - cache
        - elasticlog
        - rabbitmq
    ports:
        - "5000:80"  
  
  aggregetter.db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - "49301:4000"

  adminer:
    image: adminer
    restart: always
    ports:
          - 8080:8080
  cache:
    container_name: cache
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:cache:6379
    ports:
      - "8081:8081"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

volumes:
  cache:
    driver: local
  certs:
    driver: local
  elasticlog-data:
    driver: local
  kibanadata:
    driver: local