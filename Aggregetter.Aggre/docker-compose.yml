version: '3.4'

services:
  aggregetter.aggre.api:
    image: ${DOCKER_REGISTRY-}aggregetteraggreapi
    build:
      context: .
      dockerfile: Aggregetter.Aggre.API/Dockerfile
    environment:
        - "ConnectionStrings__AggreConnectionString=Server=aggregetter.db;Database=Aggregetter.Data;Uid=root;Pwd=example;"
        - "ConnectionStrings__AggreIdentityConnectionString=Server=aggregetter.db;Database=Aggregetter.Identity;Uid=root;Pwd=example;"
        - "ConnectionStrings__RedisConnectionString=cache"
    depends_on: 
        - aggregetter.db
        - cache
    ports:
        - "5001:443"
  
  
  aggregetter.db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    ports:
      - "49301:4000"

  adminer:
    image: adminer
    restart: always
    ports:
          - 8080:8080
  cache:
    container_name: cache
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:cache:6379
    ports:
    - "8081:8081"

volumes:
  cache:
    driver: local